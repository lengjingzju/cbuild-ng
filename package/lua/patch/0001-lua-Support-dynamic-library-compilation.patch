From aea39953d0eb8d46998754a0aa5b98bf591f58b4 Mon Sep 17 00:00:00 2001
From: Jing Leng <lengjingzju@163.com>
Date: Fri, 3 Dec 2022 14:03:25 +0800
Subject: [PATCH] lua: Support dynamic library compilation

---
 Makefile     |  6 ++++++
 src/Makefile | 19 ++++++++++++++++---
 2 files changed, 22 insertions(+), 3 deletions(-)

diff --git a/Makefile b/Makefile
index fef1af4..9dd5fbd 100644
--- a/Makefile
+++ b/Makefile
@@ -42,11 +42,14 @@ PLATS= guess aix bsd c89 freebsd generic linux linux-readline macosx mingw posix
 TO_BIN= lua luac
 TO_INC= lua.h luaconf.h lualib.h lauxlib.h lua.hpp
 TO_LIB= liblua.a
+TO_LIBSO= liblua.so*
 TO_MAN= lua.1 luac.1
 
 # Lua version and release.
+M= 5
 V= 5.4
 R= $V.4
+export M V R
 
 # Targets start here.
 all:	$(PLAT)
@@ -59,12 +62,14 @@ install: dummy
 	cd src && $(INSTALL_EXEC) $(TO_BIN) $(INSTALL_BIN)
 	cd src && $(INSTALL_DATA) $(TO_INC) $(INSTALL_INC)
 	cd src && $(INSTALL_DATA) $(TO_LIB) $(INSTALL_LIB)
+	cd src && $(INSTALL_DATA) $(TO_LIBSO) $(INSTALL_LIB)
 	cd doc && $(INSTALL_DATA) $(TO_MAN) $(INSTALL_MAN)
 
 uninstall:
 	cd src && cd $(INSTALL_BIN) && $(RM) $(TO_BIN)
 	cd src && cd $(INSTALL_INC) && $(RM) $(TO_INC)
 	cd src && cd $(INSTALL_LIB) && $(RM) $(TO_LIB)
+	cd src && cd $(INSTALL_LIB) && $(RM) $(TO_LIBSO)
 	cd doc && cd $(INSTALL_MAN) && $(RM) $(TO_MAN)
 
 local:
@@ -82,6 +87,7 @@ echo:
 	@echo "TO_BIN= $(TO_BIN)"
 	@echo "TO_INC= $(TO_INC)"
 	@echo "TO_LIB= $(TO_LIB)"
+	@echo "TO_LIBSO= $(TO_LIBSO)"
 	@echo "TO_MAN= $(TO_MAN)"
 	@echo "INSTALL_TOP= $(INSTALL_TOP)"
 	@echo "INSTALL_BIN= $(INSTALL_BIN)"
diff --git a/src/Makefile b/src/Makefile
index 1907381..8a7b4f2 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -7,7 +7,7 @@
 PLAT= guess
 
 CC= gcc -std=gnu99
-CFLAGS= -O2 -Wall -Wextra -DLUA_COMPAT_5_3 $(SYSCFLAGS) $(MYCFLAGS)
+CFLAGS= -O2 -Wall -Wextra -fPIC -DLUA_COMPAT_5_3 $(SYSCFLAGS) $(MYCFLAGS)
 LDFLAGS= $(SYSLDFLAGS) $(MYLDFLAGS)
 LIBS= -lm $(SYSLIBS) $(MYLIBS)
 
@@ -33,6 +33,7 @@ CMCFLAGS=
 PLATS= guess aix bsd c89 freebsd generic linux linux-readline macosx mingw posix solaris
 
 LUA_A=	liblua.a
+LUA_SO=	liblua.so.$(R) liblua.so.$(M) liblua.so
 CORE_O=	lapi.o lcode.o lctype.o ldebug.o ldo.o ldump.o lfunc.o lgc.o llex.o lmem.o lobject.o lopcodes.o lparser.o lstate.o lstring.o ltable.o ltm.o lundump.o lvm.o lzio.o
 LIB_O=	lauxlib.o lbaselib.o lcorolib.o ldblib.o liolib.o lmathlib.o loadlib.o loslib.o lstrlib.o ltablib.o lutf8lib.o linit.o
 BASE_O= $(CORE_O) $(LIB_O) $(MYOBJS)
@@ -44,8 +45,9 @@ LUAC_T=	luac
 LUAC_O=	luac.o
 
 ALL_O= $(BASE_O) $(LUA_O) $(LUAC_O)
-ALL_T= $(LUA_A) $(LUA_T) $(LUAC_T)
+ALL_T= $(LUA_A) $(LUA_SO) $(LUA_T) $(LUAC_T)
 ALL_A= $(LUA_A)
+ALL_SO=$(LUA_SO)
 
 # Targets start here.
 default: $(PLAT)
@@ -56,10 +58,21 @@ o:	$(ALL_O)
 
 a:	$(ALL_A)
 
+so:	$(ALL_SO)
+
 $(LUA_A): $(BASE_O)
 	$(AR) $@ $(BASE_O)
 	$(RANLIB) $@
 
+$(word 1,$(LUA_SO)): $(BASE_O)
+	$(CC) -shared -fPIC -o $@ $(BASE_O) -Wl,-soname=$(word 2,$(LUA_SO)) $(LDFLAGS) $(LIBS)
+
+$(word 2,$(LUA_SO)): $(word 1,$(LUA_SO))
+	ln -sf $< $@
+
+$(word 3,$(LUA_SO)): $(word 2,$(LUA_SO))
+	ln -sf $< $@
+
 $(LUA_T): $(LUA_O) $(LUA_A)
 	$(CC) -o $@ $(LDFLAGS) $(LUA_O) $(LUA_A) $(LIBS)
 
@@ -141,7 +154,7 @@ SunOS solaris:
 	$(MAKE) $(ALL) SYSCFLAGS="-DLUA_USE_POSIX -DLUA_USE_DLOPEN -D_REENTRANT" SYSLIBS="-ldl"
 
 # Targets that do not create files (not all makes understand .PHONY).
-.PHONY: all $(PLATS) help test clean default o a depend echo
+.PHONY: all $(PLATS) help test clean default o a so depend echo
 
 # Compiler modules may use special flags.
 llex.o:
-- 
2.17.1

