############################################
# SPDX-License-Identifier: MIT             #
# Copyright (C) 2021-.... Jing Leng        #
# Contact: Jing Leng <lengjingzju@163.com> #
############################################

#DEPS(mk.deps) busybox(psysroot defconfig menuconfig): unselect

PACKAGE_NAME     = busybox

LICENSE          = GPL-2.0-only
HOMEPAGE         = https://www.busybox.net/
DESCRIPTION      = BusyBox: The Swiss Army Knife of Embedded Linux. \
                   BusyBox combines tiny versions of many common UNIX utilities into a single small executable. \
                   It provides replacements for most of the utilities you usually find in GNU fileutils, shellutils, etc. \
                   The utilities in BusyBox generally have fewer options than their full-featured GNU cousins; however, \
                   the options that are included provide the expected functionality and behave very much like their GNU \
                   counterparts. BusyBox provides a fairly complete environment for any small or embedded system. BusyBox \
                   has been written with size-optimization and limited resources in mind. It is also extremely modular \
                   so you can easily include or exclude commands (or features) at compile time. This makes it easy to \
                   customize your embedded systems. To create a working system, just add some device nodes in /dev, \
                   a few configuration files in /etc, and a Linux kernel.

include $(ENV_MAKE_DIR)/inc.env.mk

VERSION          = 1.36.1
SRC_DIR          = busybox-$(VERSION)
SRC_NAME         = $(SRC_DIR).tar.bz2
SRC_URL          = https://www.busybox.net/downloads/$(SRC_NAME)
SRC_MD5          = 0fc591bc9f4e365dfd9ade0014f32561

CACHE_BUILD      = y
CACHE_CHECKSUM  += $(shell pwd)/config/$(CFG_NAME)
CACHE_DEPENDS    = none

CFG_NAME         = default_defconfig
MAKE_FLAGS       = -C $(SRC_PATH) O=$(OBJ_PREFIX) CONFIG_PREFIX=$(INS_TOPDIR)

CUSTOM_TARGETS   = prepend append
include $(ENV_MAKE_DIR)/inc.rule.mk

prepend:
	@if [ ! -f $(OBJ_PREFIX)/.config ]; then \
		cp -f config/$(CFG_NAME) $(SRC_PATH)/configs/$(CFG_NAME); \
		mkdir -p $(OBJ_PREFIX); \
		$(MAKE) $(MAKE_FLAGS) $(CFG_NAME) $(LOGOUTPUT); \
	fi

append:
	@rm -f $(INS_TOPDIR)/linuxrc $(INS_TOPDIR)/sbin/init

.PHONY: defconfig menuconfig

defconfig:
	@$(call do_fetch)
	@cp -f config/$(CFG_NAME) $(SRC_PATH)/configs/$(CFG_NAME)
	@mkdir -p $(OBJ_PREFIX)
	@$(MAKE) $(MAKE_FLAGS) $(CFG_NAME)
	@$(call do_unsetforce)

menuconfig:
	@$(call do_fetch)
	@$(call do_prepend)
	@mkdir -p $(OBJ_PREFIX)
	@$(MAKE) $(MAKE_FLAGS) menuconfig
	@$(call do_setforce)
