############################################
# SPDX-License-Identifier: MIT             #
# Copyright (C) 2021-.... Jing Leng        #
# Contact: Jing Leng <lengjingzju@163.com> #
############################################

#DEPS(mk.deps) rootfs(custom singletask packages licenses spdx_list:: elfs): finally

PACKAGE_NAME     = rootfs

LICENSE          = MIT
LICPATH          = .
LICDEST          = $(FAKEROOT_DIR)
LICFILE          = file://mk.deps;line=1-5
DESCRIPTION      = The rootfs example of the Build-ng compilation system.

include $(ENV_MAKE_DIR)/inc.env.mk

SYSROOT_SCRIPT  := $(ENV_TOOL_DIR)/process_sysroot.sh
PACKAGE_SCRIPT  := $(ENV_TOOL_DIR)/gen_package_infos.py
FAKEROOT_DIR    ?= $(ENV_CROSS_ROOT)/fakeroot

.PHONY: all clean install cleanroot licenses packages elfs spdx_list

all: elfs
	@echo "Build $(PACKAGE_NAME) Done."

clean:
	@echo "Clean $(PACKAGE_NAME) Done."

install:
	@

cleanroot:
	@rm -rf $(FAKEROOT_DIR)

LICENSE_PATH = $(FAKEROOT_DIR)/usr/share/license
licenses: cleanroot
	@mkdir -p $(LICENSE_PATH)
	@cp -drf licenses/* $(LICENSE_PATH)
	@$(call install_lics)
	@python3 $(PACKAGE_SCRIPT) -c $(ENV_CFG_ROOT)/.config -i $(ENV_CFG_ROOT)/info.txt \
		-o $(LICENSE_PATH)/index.txt -w $(LICENSE_PATH)/index.html -f 1:1

spdx_list:
	@python3 $(PACKAGE_SCRIPT)

packages: cleanroot licenses
	@echo "Install Packages:"
	@echo "----------------------------------------"
	@mkdir -p $(FAKEROOT_DIR)
	@make -s -C $(ENV_TOP_DIR) PRECMD= CROSS_DESTDIR=$(FAKEROOT_DIR) INSTALL_OPTION=release all_release_targets
ifneq ($(ENV_BUILD_TOOL), )
	@echo "    glibc from $(shell $(ENV_BUILD_TOOL)gcc -print-sysroot)"
	@$(SYSROOT_SCRIPT) release $(shell $(ENV_BUILD_TOOL)gcc -print-sysroot) $(FAKEROOT_DIR)
endif
	@echo "----------------------------------------"

elfs: packages
	@echo "Strip ELFs ..."
	@rm -rf $(FAKEROOT_DIR)/include/* $(FAKEROOT_DIR)/usr/include/* $(FAKEROOT_DIR)/usr/local/include/*
	@libs=$$(find $(wildcard $(addprefix $(FAKEROOT_DIR),/lib /usr/lib /usr/local/lib)) -name "*.a" -o -name "*.la"); \
	if [ ! -z "$${libs}" ]; then \
		rm -rf $${libs}; \
	fi
	@elfs=$$(find $(wildcard $(addprefix $(FAKEROOT_DIR),/lib /usr/lib /usr/local/lib \
														 /bin /usr/bin /usr/local/bin \
														 /sbin /usr/sbin /usr/local/sbin \
														 /libexec /usr/libexec /usr/local/libexec)) \
			-type f -exec sh -c "file '{}' | grep -q -e 'not stripped'" \; -print | grep -v gdb | xargs); \
	if [ ! -z "$${elfs}" ]; then \
		$(STRIP) -s $${elfs}; \
	fi

ifneq ($(ENV_BUILD_MODE), yocto)

.PHONY: psysroot

psysroot:
	@$(MAKE) $(PREPARE_SYSROOT)

endif
